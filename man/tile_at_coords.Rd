% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tile_at_coords.R
\name{tile_at_coords}
\alias{tile_at_coords}
\title{Generate tiles from imagery and spatial data}
\usage{
tile_at_coords(coords, img, len_side, out_dir, buffer = 0, ncores = 1)
}
\arguments{
\item{coords}{A two column matrix containing x and y coordinates.}

\item{img}{The path to the source raster stack.}

\item{len_side}{Desired side length of tiles in img CRS units.}

\item{out_dir}{Directory in which to place tile output.}

\item{buffer}{Distance in native CRS units to buffer around tiles.}

\item{ncores}{The number of cores to use for parallel tiling.}
}
\value{
None. Tiles are saved to out_dir.
}
\description{
Accepts a two-column matrix of coordinates and a path to a multi-band raster.
Generates tiles of specified side length
in CRS units of the data with an optional buffer to avoid edge effects in subsequent preocessing.
Save tiles to an output directory for further preprocessing.
}
\examples{
library(paint2train)

image_dir <- tempfile()
image_url <- 'https://github.com/mosscoder/paint2train/blob/main/data/sample_4band.tif?raw=true'
download.file(url = image_url, destfile = image_dir)
tdir <- tempdir()
setwd(tdir) 
preproc_dir <- 'preproc_tiles'
dir.create(preproc_dir)

#some test coordinates
xcoords <- c(727495,
             727919)

ycoords <- c(5175339,
             5175408)

coord_mat <- cbind(xcoords, ycoords)

ls <- 30 #how big should the tiles be, this is the side length (in units of data, meters here)
buff <- 5  #buffer in native units of CRS
cores <- ifelse(.Platform$OS.type == 'unix', #how many cores to use for preprocessing
                   parallel::detectCores() - 1,
                   1) 
                   
tile_at_coords(coords = coord_mat,
 len_side = ls,
 buffer = buff,
 out_dir = preproc_dir,
 img = image_dir,
 ncores = cores)
 
#show tiling outcome
par(mfrow = c(1,2))              
for(i in seq_along(xcoords)){plotRGB(stack(list.files(preproc_dir, full.names = T)[i])[[1:3]])}
par(mfrow = c(1,1))
 
}
